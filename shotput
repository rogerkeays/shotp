#!/bin/sh
#
# shotput: a portable shell script to generate TOTPs
#
# Usage: shotput [service]
#
# Generate an OTP for the given service. If [service] is not found, you will be
# prompted to provide a new secret key and an encryption password. Copy and
# paste the new credentials to the config file in this directory or
# $HOME/.config/shotput.conf
#
# Each service may use a different password.
# 
# Note: requires `oathtool >=2.6.6` and `openssl`.
#

CIPHER=aes-256-cbc
CONFIG=$(dirname $0)/shotput.keys
[ ! -f $CONFIG ] && CONFIG="$HOME/.config/shotput.keys"

#
# Prompt for a new secret key and password.
#
newkey() {
  echo -n "Enter a new secret key to encrypt: "
  read KEY
  echo $KEY | openssl enc -e -$CIPHER -pbkdf2 -base64 -A -in /dev/stdin
  if [ $? -eq 0 ]; then
    echo
    echo "Copy and paste the new credentials to the end of $0:"
    echo
  fi
}


#
# Decrypt a secret key and generate a totp.
#
# $1 the encrypted secret key
# $2 totp algorithm (default SHA1)
# $3 totp timeout in seconds (default 30)
#
totp() {
  echo $1 | \
    openssl enc -d -$CIPHER -pbkdf2 -base64 -in /dev/stdin | \
    oathtool --base32 --totp=${2:-sha1} --time-step-size=${3:-30s} -
}

#
# Include config code.
#
. $CONFIG

